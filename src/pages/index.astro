---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.astro";
import { getCollection } from "astro:content";

import Portfolio from "../components/Portfolio.astro";
// import Locked from "../components/Locked.astro";
// import Fraserway from "../images/portfolio/fraserway/fraserway-logo.png"
let allWork = await getCollection("portfolio", ({ data }) => {
  return data.isDraft !== true;
});

allWork.sort((a, b) => Date.parse(b.data.pubDate) - Date.parse(a.data.pubDate));






---

<Layout
  title="Digital Portfolio of Jackie Ho"
  description="A digital product designer Based in Vancouver, BC"
>
  <main slot="main">
  <Hero  
  primaryCTA="View Projects"
      primaryLink="#work"></Hero>
      <section class="about-section">
        <div class="about-content">
          <div class="about-header-container">
            <h3 class="section-header">About Jackie Ho</h3>
          </div>
          <div class="about-description-container">
            <p class="about-description">
              A digital professional with <a href="/my-experiences">over 10 years of experiences supporting small businesses</a> with digital
              marketing, ux design, web development & product management.
            </p>
            <p class="about-description">
              Outside of work, I'm a part-time serial hobbyist, full-time foodie,
              and world traveler.
            </p>
          </div>
        </div>
      </section> 

      <section id="work" class="work-section">
        <h2>WORK</h2>
        <ul id="button-list" class="filter-buttons">
          <button  class="filter-button active" onclick="filterPortfolio('All')">All</button>

          {
              
            allWork
              .map((blog) => blog.data.category)
              .filter((category, index, self) => self.indexOf(category) === index)
              .sort()
              .map((category) => (
                <button class="filter-button" onclick={`filterPortfolio('${category}')`}>{category}</button>
              ))
          }
        </ul>
        <div class="work-container">
          <ul class="portfolio-list">
            <!-- <Locked
            url=`/fraserway`
            title="Fraserway RV"
            image={Fraserway}    
            alt=""
            category="UX, Visual & Service Design"
            description="Example work that I have done"
            technology=""
          /> -->

            {
              
                allWork.map((blog) => (
                  <Portfolio
                    url={`/portfolio/${blog.slug}/`}
                    title={blog.data.title}
                    image={blog.data.thumbnail}                   
                    alt={blog.data.alt}
                    category={blog.data.category}
                    description={blog.data.description}
                    technology={blog.data.technology}
                    cta = {blog.data.cta}
                    deliverables = {blog.data.deliverables}
                  />
                ))
            }
          </ul>
        </div>
      </section>
  </main>
</Layout>
<script is:inline>
      function filterPortfolio(category) {
        // Logic to filter portfolio based on category
        let portfolioItems = document.querySelectorAll('.portfolio-list-item'); 
        let portfolioCategory = document.querySelectorAll('.portfolio-category'); 
        reset();
        for (let i = 0; i < portfolioItems.length; i++) {
          let item = portfolioItems[i];
          let cat = portfolioCategory[i];
          console.log(cat);

          if (category === cat.textContent)  {
            console.log(category)
            console.log(cat.textContent);
          }

          else if (category === "All") {
            item.style.display = "block";
          } 

          else {
            item.style.display = "none";
          }
        }
      }

      function reset() {
        let portfolioItems = document.querySelectorAll('.portfolio-list-item'); 
        for (let i = 0; i < portfolioItems.length; i++) {
          let item = portfolioItems[i];
          item.style.display = "block";
        }
      }



   // Get the container element
var btnContainer = document.getElementById("button-list");

// Get all buttons with class="btn" inside the container
var btns = btnContainer.getElementsByClassName("filter-button");

// Loop through the buttons and add the active class to the current/clicked button
for (var i = 0; i < btns.length; i++) {
  btns[i].addEventListener("click", function() {
    var current = document.getElementsByClassName("active");
    current[0].className = current[0].className.replace(" active", "");
    this.className += " active";
  });
}
</script>


<style lang="scss">

main {
      width: 100%;
    }
    .filter-buttons{
      padding: 0;
      margin: 1rem 0;
    }
    .filter-button {
      margin: .25rem;
      font-size: 0.75rem;
      color: #333333;
      border: 1px solid #333333;
      &:hover, &:focus, &:active {
        cursor: pointer;
        color: #ffffff;
        background-color: #000000;
      }
    }
    .about-section {
      background-color: #eee;
      margin-top: 2rem;
    }

    .section-header {
      padding: 0;
      margin: 0;
      text-transform: uppercase;
      font-weight: 400;
      font-size: 2rem;
      color: var(--primaryTextColour);
    }

    .about-description {
      font-size: 1rem;
    }

  .about-section {
    background-color: #eee;
    margin-top: 2rem;
  }

  .section-header {
    padding: 0;
    margin: 0;
    text-transform: uppercase;
    font-weight: 400;
    font-size: 2rem;
    color: var(--primaryTextColour);
  }

  .active {	
  background:black;
  color:white;  
}

  .about-description {
    font-size: 1rem;
    line-height: 1.5;
  }
  .bento {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: var(--primaryBackgroundColour);
    z-index: 5;
    height: calc(50lvh - var(--headerHeight));
  }

  .icon-lightbulb {
    width: 32px;
    height: 32px;
  }

  .image-container {
    display: flex;
    height: 100%;
    align-items: center;
  }

  .bento-description {
    color: var(--primaryTextColour);
    font-weight: 100;
    font-size: 1rem;
    padding: 0;
    margin: 0;
  }
  .bento-item {
    height: 300px;
    max-width: 100vw;
    padding: 1rem;
    margin-bottom: 1rem;
  }

  .text-content {
    justify-content: center;
    align-self: center;
    height: 100%;
  }

  .item-1 {
    grid-column: 1 / span 3;
    color: white;
    display: flex;
    justify-content: center;
    align-content: center;
  }

  .work-container {
    padding: 0;
    margin: 0;
  }

  .portfolio-list {
    display: flex;
    max-width: 100%;
    width: 100%;
    justify-content: center;
    align-items:center;
    margin: 0;
    padding: 0;
    flex-wrap: wrap;
  }
  .button {
    font-size: 0.5rem;
  }

  @media only screen and (min-width: 768px) {

    .filter-button{
      font-size: 1rem;
      padding: 0.5rem;
    }

    .about-section {
      margin-top: 4rem;
      display: grid;
    }
    .about-content {
      display: grid;
      justify-content: center;
      align-items: start;
      padding: 0;
      width: 100%;
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
      grid-template-rows: 1fr;
    }

    .section-header {
      text-transform: uppercase;
      font-size: 2rem;
    }
    .about-header-container {
      padding: 0;
      margin: 0;

      grid-column: 2 / 4;
      grid-row: 1 / 2;
      text-align: center;
    }
    .about-description-container {
      grid-column: 4 / 6;
      grid-row: 1 / 2;
      margin: 0;
      padding: 0;
    }

    .about-description {
      font-size: 1.25rem;
      &:first-child {
        margin: 0;
      }
      font-size: 1.5rem;
    }
    .bento {
      background: var(--primaryBackgroundColour);
      margin: auto;
      z-index: 1;
      display: grid;
      column-gap: 1rem;
      row-gap: 1rem;
      border-radius: 1rem;
      max-width: var(--layoutWidth);
      grid-template-columns: repeat(6, 1fr);
    }

    .icon-lightbulb {
      width: 64px;
      height: 64px;
    }

    .bento-item {
      padding: 0;
      margin-bottom: 0;
      position: relative;
    }

    .bento-item-header {
      position: absolute;
      bottom: 1rem;
      right: 0;
      margin: 0;
      padding: 0.5rem;
      background: red;
      color: var(--primaryTextColour);
      width: 80%;
    }

    .item-1 {
      grid-column: 1 / span 2;
      color: white;
    }
  }
</style>
