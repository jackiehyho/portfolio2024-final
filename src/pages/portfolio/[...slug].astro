---
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const portfolioEntries = await getCollection('portfolio');
  return  portfolioEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

import Layout from '../../layouts/Layout.astro';

const { entry } = Astro.props;

const { Content } = await entry.render();
import { Image } from 'astro:assets';

import Carousel from '../../components/Carousel.astro';
import ProcessOverview from '../../components/ProcessOverview.astro';
import ColumnTextBlock from '../../components/ColumnTextBlock.astro';
---
<Layout title={entry.data.title} description={entry.data.description}>
	<main class="main portfolio-main" slot="main">
    <section>
        <!-- <Image class="main-image" src={entry.data.hero} alt={entry.data.alt} /> -->
        <div class="portfolio-content">
          <div class="portfolio-intro-content">
            <div class="portfolio-intro">
              <div class="portfolio-category-container">
                {entry.data.category.map((item) => (
                <span class="portfolio-category">{item}</span>
                ))}
                </div>
              <h1 class="portfolio-title">{entry.data.title}</h1>
             
              <h2 class="portfolio-subheaders">Introduction</h2>
              <p class="portfolio-intro-text">{entry.data.introduction}</p>

              <h2 class="portfolio-subheaders">Timeline</h2>
              <p>{entry.data.projectDuration}</p>
              <h2 class="portfolio-subheaders">My Role</h2>
              {entry.data.roles.map((role) => (
              <p>{role}</p>
              ))}
              {entry.data.team &&  (
                 <>  
                                       <h2 class="portfolio-subheaders">Team Members</h2>

                  <ol>

                      {entry.data.team.map((member) => (       
               
                    
                
                       <li><strong>{member.name}</strong><br/><em>{member.position}</em></li><br/>
                       ))}
        
                  </ol>

                </>
                                   

                
                  
                                    )}
            </div>
              
            <div class="portfolio-objectives">
              <div class="portfolio-deliverables">
                <div class="portfolio-image-section">
                <div class="portfolio-image-container">
                  <Image src={entry.data.thumbnail} alt={entry.data.alt} />
                </div>
              
                </div>

              <div class="portfolio-deliverables">
                <div class="portfolio-text-content">
                {entry.data.productVision && (
                  <>
                    <h2 class="portfolio-subheaders">Product Vision</h2>
                    <p>{entry.data.productVision}</p>
                  </>
                  )}

                  <h2 class="portfolio-subheaders">Product Goals & Objectives</h2>
                  <ul>
                    {entry.data.projectGoal.map((goal) => (

                  <li>{goal}</li>
                    ))}
                  </ul>


                
            </div>
          </div>

          </div>
          </div>
        </section>
          <ProcessOverview processes={entry.data.processes.map(process => ({
            src: process.src.src,
            header: process.header,
            activities: process.activities.map((activity: string) => ({
              src: activity,
              alt: '' // Add the alt property here
            }))
          }))} />
          <Carousel header="Screenshots" 
          images={entry.data.carousel.map(image => ({ 
            src: image.src.src, 
            }))} 
             />
       
          {entry.data.impact && (
            <>
            <ColumnTextBlock header="Product Impact"  content={entry.data.impact.map(item => ({ header: item.header, description: item.description, list: item.list || [] }))} />
            </>
                                   
                                   )}

          
          <Content />
      
          </div>
	</main>
</Layout>
<style lang="scss" is:global>

.portfolio-image-container img {
  border-radius: 2rem;  
  margin: 0;
  padding: 0;
  height: auto;
}

.portfolio-image-container {
  border-radius: 2rem;  
  padding:0;
  margin: 0;
  
  &:first-child {
    margin-right:1rem;
  }
  &:last-child {
    margin-left:1rem;
  }

}

  .portfolio-intro-text{
    font-size: 1.25rem;
    line-height: 150%;
  }
  .main-image {
    width: 100svw;
    height: 100%;
  }

  .thumbnail-image{
    width: 100%;
    height: auto;
    border-radius: 1rem 1rem 0 0;
  }
  .main {
    display:flex;
    flex-direction: column;
    align-items: center;
    max-width: 100svw;
  }

  .main a {
    color: red;
  }

  .portfolio-content {
    padding: 1rem;
    width: 100%;
    max-width: 1440px;
    margin: auto;
    p{
      font-size: 1.2rem;
    }
    li{
      line-height: 150%;
      font-size: 1.2rem;
    }
  }

  .portfolio-category{
    background: #333;
    color:white;
    text-transform: uppercase;
    padding: 0.25rem 0.5rem;
    border-radius: 1rem;
    margin: 0;
    font-weight: 700;
    font-size: 0.75rem;
    margin-bottom: 2rem;
    margin-right: 0.5rem;
  }
  .portfolio-title {
    font-size: 1.75rem;
    margin: 0;
    padding: 0;
    padding:  1rem 0;
    text-transform: uppercase;
  }

  .portfolio-gallery{
    position:relative;
    display: flex;
    gap: 20px;
    justify-content: center;
    align-items: center;
    flex-basis: 100%;
    width: 100%;
  }

  .problem-statement{
    background: linear-gradient(to right, #02AAB0 0%, #00CDAC  51%, #02AAB0  100%);
    padding: 1rem;
    color: white;
  }
 
  @media only screen and (min-width: 768px) {
  
    .portfolio-category-container{
      padding-top:1rem;
      padding-bottom: 1rem;
    }
    .portfolio-subheaders{
      font-size: 1.25rem;
      font-weight: 800;
      text-transform: uppercase;
    }
  .container {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }
  
  .portfolio-intro-content{
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    gap: 2rem;
    padding-top: 2rem;
  }

  .portfolio-title {
    font-size: 2rem;
  }
.portfolio-intro {
  display: inline-block;
  width: 40%;
  background:white;
  padding: 2rem;
  border-radius: 2rem;

}
.portfolio-objectives {
  display:inline-block;
  width: 60%;

}

.portfolio-image-container {
  border-radius: 2rem;  
  padding:0;
  margin: 0;
  width: 100%;

  
  &:first-child {
    margin-right:1rem;
  }
  &:last-child {
    margin-left:1rem;
  }

}
.portfolio-image-container img {
  border-radius: 2rem;  
  margin: 0;
  width: 100%;
  height: auto;


}
.portfolio-text-content {
  margin: 0;
  background:white;
  padding: 2rem;
  margin-top:2rem;
  border-radius: 2rem;  
}

.portfolio-image-section{
  width: 100%;
  display: flex;
  border-radius: 2rem;  
  padding: 0;
  margin: 0;
  flex-direction:row;


}

  .portfolio-deliverables {
  border-radius: 2rem;  
  width: 100%;
}

 
}
</style>

<script>
  
</script>